// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineStore.Persistence.Context;

#nullable disable

namespace OnlineStore.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250110235919_up1")]
    partial class up1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineStore.domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 34, DateTimeKind.Local).AddTicks(298),
                            IsDeleted = false,
                            Name = "Tools"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 34, DateTimeKind.Local).AddTicks(377),
                            IsDeleted = false,
                            Name = "Industrial & Outdoors"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 34, DateTimeKind.Local).AddTicks(389),
                            IsDeleted = false,
                            Name = "Industrial"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 34, DateTimeKind.Local).AddTicks(437),
                            IsDeleted = true,
                            Name = "Shoes, Kids & Health"
                        });
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 34, DateTimeKind.Local).AddTicks(7040),
                            IsDeleted = false,
                            Name = "Bilgisayar",
                            ParentId = 1,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 34, DateTimeKind.Local).AddTicks(7045),
                            IsDeleted = false,
                            Name = "Kadýn",
                            ParentId = 2,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 34, DateTimeKind.Local).AddTicks(7030),
                            IsDeleted = false,
                            Name = "Elektrik",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 34, DateTimeKind.Local).AddTicks(7036),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priorty = 2
                        });
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 38, DateTimeKind.Local).AddTicks(726),
                            Description = "Commodi incidunt ama mýknatýslý ýþýk.",
                            IsDeleted = false,
                            Title = "Yazýn."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 38, DateTimeKind.Local).AddTicks(774),
                            Description = "Layýkýyla ipsum quis masaya için dolores reprehenderit.",
                            IsDeleted = false,
                            Title = "Reprehenderit veritatis."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 38, DateTimeKind.Local).AddTicks(806),
                            Description = "Quaerat quasi voluptatem explicabo.",
                            IsDeleted = true,
                            Title = "Dignissimos."
                        });
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 42, DateTimeKind.Local).AddTicks(338),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Discount = 7.426850497026390m,
                            IsDeleted = false,
                            Price = 493.98m,
                            Title = "Unbranded Steel Shoes"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 4,
                            CreatedDate = new DateTime(2025, 1, 11, 2, 59, 19, 42, DateTimeKind.Local).AddTicks(373),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Discount = 4.259046207460110m,
                            IsDeleted = false,
                            Price = 27.55m,
                            Title = "Incredible Rubber Hat"
                        });
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.Detail", b =>
                {
                    b.HasOne("OnlineStore.domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.Product", b =>
                {
                    b.HasOne("OnlineStore.domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("OnlineStore.domain.Entities.Category", "Category")
                        .WithMany("ProductCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStore.domain.Entities.Product", "Product")
                        .WithMany("ProductCategory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("OnlineStore.domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
